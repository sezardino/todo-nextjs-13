// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  providerType      String
  providerId        String
  providerAccountId String

  refreshToken String?

  accessToken        String?
  accessTokenExpires DateTime?

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name         String?
  email        String?    @unique
  login        String     @unique
  password     String
  bio          String?
  status       UserStatus @default(ACTIVE)
  socials      String[]   @default([])
  localization String?

  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  todos Todo[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationRequest {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Todo {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title       String
  description String  @default("")
  completed   Boolean @default(false)
  hidden      Boolean @default(false)
  children    Todo[]  @relation("parent")
  parent      Todo?   @relation("parent", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentId    String? @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
